name: Auto-Deploy to Production

on:
  push:
    branches:
      - 'claude/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run QC checks
        run: |
          echo "Running quality control checks..."
          chmod +x ./verify-seo-changes.sh
          ./verify-seo-changes.sh

      - name: Run build test
        run: |
          echo "Testing production build..."
          npm run build

      - name: Performance checks
        run: |
          echo "Checking bundle size..."
          if [ -d "dist" ]; then
            BUNDLE_SIZE=$(du -sh dist | cut -f1)
            echo "Bundle size: $BUNDLE_SIZE"
            SIZE_BYTES=$(du -sb dist | cut -f1)
            if [ $SIZE_BYTES -gt 10485760 ]; then
              echo "::warning::Bundle size is large: $BUNDLE_SIZE"
            fi
          fi

      - name: Create Pull Request
        id: create-pr
        run: |
          # Check if PR already exists
          EXISTING_PR=$(gh pr list --head "${{ github.ref_name }}" --base main --json number --jq '.[0].number' 2>/dev/null || echo "")

          if [ -n "$EXISTING_PR" ]; then
            echo "✅ PR already exists: #$EXISTING_PR"
            echo "pr-number=$EXISTING_PR" >> $GITHUB_OUTPUT
          else
            echo "Creating new PR..."
            gh pr create \
              --base main \
              --head "${{ github.ref_name }}" \
              --title "Auto-deploy: ${{ github.event.head_commit.message }}" \
              --body "Automated deployment from ${{ github.ref_name }}" \
              --fill > pr_output.txt 2>&1

            if [ $? -eq 0 ]; then
              PR_URL=$(cat pr_output.txt)
              PR_NUMBER=$(echo "$PR_URL" | grep -o '[0-9]\+$')
              echo "✅ Created PR #$PR_NUMBER"
              echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
            else
              echo "❌ Failed to create PR. Output:"
              cat pr_output.txt
              exit 1
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.create-pr.outputs.pr-number
        run: |
          echo "Enabling auto-merge for PR #${{ steps.create-pr.outputs.pr-number }}..."
          gh pr merge ${{ steps.create-pr.outputs.pr-number }} \
            --auto \
            --squash \
            --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        if: success()
        run: |
          echo "✅ Auto-deployment initiated!"
          echo "PR #${{ steps.create-pr.outputs.pr-number }} will auto-merge when checks pass"
          echo "Netlify will deploy automatically after merge"
