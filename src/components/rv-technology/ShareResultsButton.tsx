import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Share2, Copy, Check } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface ShareResultsButtonProps {
  title: string;
  summary: string;
  variant?: 'default' | 'outline' | 'ghost';
  size?: 'sm' | 'default' | 'lg';
}

export const ShareResultsButton: React.FC<ShareResultsButtonProps> = ({
  title,
  summary,
  variant = 'outline',
  size = 'default'
}) => {
  const [copied, setCopied] = useState(false);
  const { toast } = useToast();

  const handleCopy = async () => {
    const textToCopy = `${title}\n\n${summary}\n\nGenerated by Smart RV Hub - https://smartrvhub.com`;
    
    try {
      await navigator.clipboard.writeText(textToCopy);
      setCopied(true);
      toast({
        title: "Copied to clipboard",
        description: "Your results have been copied and are ready to share.",
      });
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      toast({
        title: "Copy failed",
        description: "Please try again or manually copy the text.",
        variant: "destructive"
      });
    }
  };

  const handleShare = async () => {
    const textToShare = `${title}\n\n${summary}\n\nGenerated by Smart RV Hub`;
    
    if (navigator.share) {
      try {
        await navigator.share({
          title: title,
          text: textToShare,
        });
      } catch (err) {
        // User cancelled share or share failed - fallback to copy
        if ((err as Error).name !== 'AbortError') {
          handleCopy();
        }
      }
    } else {
      // Fallback for browsers without share API
      handleCopy();
    }
  };

  return (
    <div className="flex gap-2">
      <Button
        onClick={handleCopy}
        variant={variant}
        size={size}
        className="border-[#5B9BD5]/50 text-[#5B9BD5] hover:bg-[#5B9BD5]/10"
      >
        {copied ? (
          <>
            <Check className="h-4 w-4 mr-2" />
            Copied!
          </>
        ) : (
          <>
            <Copy className="h-4 w-4 mr-2" />
            Copy Results
          </>
        )}
      </Button>
      
      <Button
        onClick={handleShare}
        variant={variant}
        size={size}
        className="border-[#5B9BD5]/50 text-[#5B9BD5] hover:bg-[#5B9BD5]/10"
      >
        <Share2 className="h-4 w-4 mr-2" />
        Share
      </Button>
    </div>
  );
};
